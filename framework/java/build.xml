<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="org.hl7.fhir.tools" default="Publisher" xmlns:ivy="antlib:org.apache.ivy.ant">
  <property name="tools.location" value="tools/java/org.hl7.fhir.tools.core"/>
  <property name="imports.location" value="tools/java/imports"/>

  <condition property="offline">
    <matches pattern="--offline" string="${args}"/>
  </condition>

  <target name="clean">
    <ant
      antfile="build.xml"
      dir="${tools.location}"
      inheritAll="true"
      target="cleanall"/>
  </target>

  <path id="saxon.path">
    <fileset dir="tools/java/imports">
      <include name="*.jar"/>
    </fileset>
  </path>
  <property name="saxon.classname" value="net.sf.saxon.TransformerFactoryImpl"/>

  <target name="Publisher" depends="fetch-imports">
    <!--<ant
      antfile="build.xml"
      dir="${tools.location}"
      inheritAll="true"
      target="Publisher"/>-->
<!--    <xslt in="publish/profiles-resources.xml" out="qa/profiles-resources.html" style="tools/xslt/ProfileToQAView.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>
    <xslt in="publish/profiles-others.xml" out="qa/profiles-others.html" style="tools/xslt/ProfileToQAView.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>
    <xslt in="publish/profiles-types.xml" out="qa/profiles-types.html" style="tools/xslt/ProfileToQAView.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>
    <xslt in="publish/extension-definitions.xml" out="qa/extension-definitions.html" style="tools/xslt/ProfileToQAView.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>
    <xslt in="publish/search-parameters.xml" out="qa/search-parameters.html" style="tools/xslt/ProfileToQAView.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>
    <xslt in="publish/valuesets.xml" out="qa/valuesets.html" style="tools/xslt/ProfileToQAView.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>-->
  </target>

  <property name="ivy.install.version" value="2.4.0" />
  <property name="ivy.jar.dir" value="${basedir}/ivy" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

  <target name="download-ivy" unless="offline">
    <mkdir dir="${ivy.jar.dir}"/>
    <echo message="installing ivy..."/>
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
      dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="install-ivy" depends="download-ivy" description="--> install ivy">
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
      uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>    

  <target
    name="fetch-imports"
    unless="offline"
    depends="install-ivy" 
    description="--> resolve dependencies, compile and run the project">
    <mkdir dir="${imports.location}"/>
    <ivy:resolve transitive="false" file="ivy.xml"/>
    <ivy:retrieve type="jar,bundle" sync="true" pattern="${imports.location}/[artifact]-[revision].[ext]"/>
    <ivy:dependencytree/>
  </target>

  <target name="clean-ivy" description="--> clean the ivy installation">
    <delete dir="${ivy.jar.dir}"/>
  </target>

  <target name="clean-cache" depends="install-ivy" 
    description="--> clean the ivy cache">
    <ivy:cleancache />
  </target>

</project>
